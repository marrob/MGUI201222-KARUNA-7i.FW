/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DEBUGSCREENVIEWBASE_HPP
#define DEBUGSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/debugscreen_screen/DebugScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>

class DebugScreenViewBase : public touchgfx::View<DebugScreenPresenter>
{
public:
    DebugScreenViewBase();
    virtual ~DebugScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void OnClickDO_0()
    {
        // Override and implement this function in DebugScreen
    }

    virtual void OnClickDO_1()
    {
        // Override and implement this function in DebugScreen
    }

    virtual void OnClickDO_2()
    {
        // Override and implement this function in DebugScreen
    }

    virtual void OnClickDO_3()
    {
        // Override and implement this function in DebugScreen
    }

    virtual void OnClickDO_4()
    {
        // Override and implement this function in DebugScreen
    }

    virtual void OnClickDO_5()
    {
        // Override and implement this function in DebugScreen
    }

    virtual void OnClickDO_6()
    {
        // Override and implement this function in DebugScreen
    }

    virtual void OnClickDO_7()
    {
        // Override and implement this function in DebugScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  >  btnBack;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::Container containerDO;
    touchgfx::TextArea lblDI_1;
    touchgfx::TextArea lblDI1;
    touchgfx::TextArea lblDO0_2_3;
    touchgfx::TextArea lblDO0_1_1_3;
    touchgfx::TextArea lblDO0_1_2_2;
    touchgfx::TextArea lblDO0_2_1_2;
    touchgfx::TextArea lblDO0_1_1_1_2;
    touchgfx::TextArea lblDO0_3_2;
    touchgfx::ToggleButton tbOut0;
    touchgfx::ToggleButton tbOut1;
    touchgfx::ToggleButton tbOut2;
    touchgfx::ToggleButton tbOut3;
    touchgfx::ToggleButton tbOut4;
    touchgfx::ToggleButton tbOut5;
    touchgfx::ToggleButton tbOut6;
    touchgfx::ToggleButton tbOut7;
    touchgfx::Container containerAI;
    touchgfx::TextArea lblDI_1_1;
    touchgfx::TextArea lblDI_1_1_1;
    touchgfx::TextArea lblDI_1_1_2;
    touchgfx::TextArea lblDI_1_1_3;
    touchgfx::Container containerDI;
    touchgfx::TextArea lblDO0;
    touchgfx::Circle circLED0;
    touchgfx::PainterRGB565 circLED0Painter;
    touchgfx::TextArea lblDO0_1;
    touchgfx::Circle circLED1;
    touchgfx::PainterRGB565 circLED1Painter;
    touchgfx::TextArea lblDO0_2;
    touchgfx::Circle circLED2;
    touchgfx::PainterRGB565 circLED2Painter;
    touchgfx::TextArea lblDO0_1_1;
    touchgfx::Circle circLED3;
    touchgfx::PainterRGB565 circLED3Painter;
    touchgfx::TextArea lblDO0_3;
    touchgfx::Circle circLED4;
    touchgfx::PainterRGB565 circLED4Painter;
    touchgfx::TextArea lblDO0_1_2;
    touchgfx::Circle circLED5;
    touchgfx::PainterRGB565 circLED5Painter;
    touchgfx::TextArea lblDO0_2_1;
    touchgfx::Circle circLED6;
    touchgfx::PainterRGB565 circLED6Painter;
    touchgfx::TextArea lblDO0_1_1_1;
    touchgfx::Circle circLED7;
    touchgfx::PainterRGB565 circLED7Painter;
    touchgfx::TextArea lblDO0_4;
    touchgfx::Circle circLED8;
    touchgfx::PainterRGB565 circLED8Painter;
    touchgfx::TextArea lblDO0_1_3;
    touchgfx::Circle circLED9;
    touchgfx::PainterRGB565 circLED9Painter;
    touchgfx::TextArea lblDO0_2_2;
    touchgfx::Circle circLED10;
    touchgfx::PainterRGB565 circLED10Painter;
    touchgfx::TextArea lblDO0_1_1_2;
    touchgfx::Circle circLED11;
    touchgfx::PainterRGB565 circLED11Painter;
    touchgfx::TextArea lblDO0_3_1;
    touchgfx::Circle circLED12;
    touchgfx::PainterRGB565 circLED12Painter;
    touchgfx::TextArea lblDO0_1_2_1;
    touchgfx::Circle circLED13;
    touchgfx::PainterRGB565 circLED13Painter;
    touchgfx::TextArea lblDO0_2_1_1;
    touchgfx::Circle circLED14;
    touchgfx::PainterRGB565 circLED14Painter;
    touchgfx::TextArea lblDO0_1_1_1_1;
    touchgfx::Circle circLED15;
    touchgfx::PainterRGB565 circLED15Painter;
    touchgfx::TextAreaWithOneWildcard lblAI0;
    touchgfx::TextAreaWithOneWildcard lblAI1;
    touchgfx::TextAreaWithOneWildcard lblAI2;
    touchgfx::TextAreaWithOneWildcard lblAI3;
    touchgfx::Line line1;
    touchgfx::PainterRGB565 line1Painter;
    touchgfx::Line line1_1;
    touchgfx::PainterRGB565 line1_1Painter;
    touchgfx::TextArea lblServiceTitle;

    /*
     * Wildcard Buffers
     */
    static const uint16_t LBLAI0_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblAI0Buffer[LBLAI0_SIZE];
    static const uint16_t LBLAI1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblAI1Buffer[LBLAI1_SIZE];
    static const uint16_t LBLAI2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblAI2Buffer[LBLAI2_SIZE];
    static const uint16_t LBLAI3_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblAI3Buffer[LBLAI3_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<DebugScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<DebugScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 15360;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // DEBUGSCREENVIEWBASE_HPP
