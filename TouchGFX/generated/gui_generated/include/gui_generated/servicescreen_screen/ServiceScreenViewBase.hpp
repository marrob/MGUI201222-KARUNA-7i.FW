/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SERVICESCREENVIEWBASE_HPP
#define SERVICESCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/servicescreen_screen/ServiceScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>
#include <gui/containers/ServiceContainer.hpp>

class ServiceScreenViewBase : public touchgfx::View<ServiceScreenPresenter>
{
public:
    ServiceScreenViewBase();
    virtual ~ServiceScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void OnClickFactoryReset()
    {
        // Override and implement this function in ServiceScreen
    }

    virtual void OnClickSoftReset()
    {
        // Override and implement this function in ServiceScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  >  btnBack;
    touchgfx::ImageButtonStyle< touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  >  btnLog;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::TextArea lblServiceTitle;
    touchgfx::ScrollableContainer scrollContService;
    ServiceContainer serviceControl;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ServiceScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 15360;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // SERVICESCREENVIEWBASE_HPP
