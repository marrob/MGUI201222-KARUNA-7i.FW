/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef PASSWORDSCREENVIEWBASE_HPP
#define PASSWORDSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/passwordscreen_screen/PasswordScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class PasswordScreenViewBase : public touchgfx::View<PasswordScreenPresenter>
{
public:
    PasswordScreenViewBase();
    virtual ~PasswordScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void ClickBtn0()
    {
        // Override and implement this function in PasswordScreen
    }

    virtual void ClickBtn1()
    {
        // Override and implement this function in PasswordScreen
    }

    virtual void ClickBtn2()
    {
        // Override and implement this function in PasswordScreen
    }

    virtual void ClickBtn3()
    {
        // Override and implement this function in PasswordScreen
    }

    virtual void ClickBtn4()
    {
        // Override and implement this function in PasswordScreen
    }

    virtual void ClickBtn5()
    {
        // Override and implement this function in PasswordScreen
    }

    virtual void ClickBtn6()
    {
        // Override and implement this function in PasswordScreen
    }

    virtual void ClickBtn7()
    {
        // Override and implement this function in PasswordScreen
    }

    virtual void ClickBtn8()
    {
        // Override and implement this function in PasswordScreen
    }

    virtual void ClickBtn9()
    {
        // Override and implement this function in PasswordScreen
    }

    virtual void ClickBtnOK()
    {
        // Override and implement this function in PasswordScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::Container container1;
    touchgfx::Container containerNums;
    touchgfx::BoxWithBorder boxNumPad;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btnNumber_9;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btnNumber_8;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btnNumber_7;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btnNumber_6;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btnNumber_5;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btnNumber_4;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btnNumber_3;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btnNumber_2;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btnNumber_1;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btnNumber_0;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btnDumb;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::TextArea lblPintTitle_0;
    touchgfx::TextArea lblPinTitle;
    touchgfx::TextAreaWithOneWildcard lblPinCode;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  btnOK;
    touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  >  btnBack;
    touchgfx::TextArea lblPinIsNotCorrect;

    /*
     * Wildcard Buffers
     */
    static const uint16_t LBLPINCODE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar lblPinCodeBuffer[LBLPINCODE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<PasswordScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // PASSWORDSCREENVIEWBASE_HPP
